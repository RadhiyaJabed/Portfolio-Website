@import 'config';
@import 'menu';


* {
    box-sizing: border-box;
}
body {
    @include background;
    background: $primary-colour;
    color: set-text-colour($primary-colour);
    height: 100%;
    margin:0;
    font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    line-height: 1.5;
}

// Headings
h1, h2, h3 {
    margin:0;
    font-weight: 400;

    &.lg-heading {
        font-size:6rem;
    }

    &.sm-heading {
        margin-bottom: 2rem;
        padding: 0.2rem 1rem;
        background: rgba(lighten($primary-colour,2), 0.5);
    }
    
}

a {
    color: set-text-colour($primary-colour);
    text-decoration: none;
}

header{
    position: fixed;
    z-index: 2;
    width: 100%;
}
.text-secondary{
    color: $secondary-colour;
}

main{
    padding: 4rem;
    //height: 100%;
    //when making a sticky footer. the element before it (in this case main^) you want to calculate the viewport height minus the height of the footer.
    min-height: calc(100vh - 60px); //interesting way to make the footer always stay at the bottom through calculations.
    .icons {
        margin-top: 1rem;

        a {
            padding: 0.4rem;
            &:hover {
                color: $secondary-colour;
                @include easeOut;
            }
        }
    }

    &#home {
        overflow: hidden;
        h1 {
            margin-top: 20vh;
        }
    }
}

.about-info {
    display: grid;
    grid-gap:30px;
    grid-template-areas:
    'bioimage bio bio'
    'job1 job2 job3'; //visual representation of grid template
    grid-template-columns: repeat(3,1fr);
    
    // from here below doesnt need to be nested, but since sass has this nesting functionality, why not? Keeps it clean and all together.
    .bio-image {
        grid-area: bioimage; //it is bioimage because thats the exact name we put above
        margin:auto;
        border-radius: 50%; //makes circle
        border: $secondary-colour 3px solid;
    }
    
    .bio {
        grid-area: bio;
        font-size: 1.5rem;
    }
    
    .job-1 {
        grid-area: job1;
    }
    .job-2 {
        grid-area: job2;
    }
    .job-3 {
        grid-area: job3;
    }
    
    .job {
        background: lighten($primary-colour, 5);
        padding: 0.5rem;
        border-bottom: $secondary-colour 5px solid;
    }
}

// Work/Projects

.projects {
    display: grid;
    gap: 0.7rem; //it seems like grid-gap is obsolete
    grid-template-columns: repeat(3,1fr);

    img{
        width: 100%;
        border: 3px #fff solid;

        &:hover {
            opacity: 0.5;
            border-color: $secondary-colour;
            @include easeOut;
        }
    }
}

//Contact Page
/*--
.boxes {
    display: flex;
    flex-wrap: wrap; //when it doesnt fit it will go onto next line. cool show of different technologies rather than just using grid. Might change later for consistency.
    justify-content: space-evenly;
    align-items: center;
    margin-top: 1rem;

    div {
        font-size: 2rem;
        border: 3px #fff solid;
        padding: 1.5rem 2.5rem;
        margin-bottom: 3rem;
        @include easeOut;

        &:hover {
            padding: 0.5rem 1.5rem;
            background: $secondary-colour;
            color: set-text-colour($secondary-colour);
            span{
                color: set-text-colour($secondary-colour);
            }
        }
    }
}
---*/
#form-container {
    display: grid;
    place-items: center;
    //background: $secondary-colour;
    //padding: 10px 5px 2px 1px;
    
}
form {
    display: flex;
    background-color: lighten($primary-colour,5);
    padding: 1rem;
    flex-direction: column;
    width: 24rem;
    //width: 75vw;
    gap: 1rem;
    border-radius: 12px;
}

input,
select,
textarea {
    padding: 1.4rem;
    background: transparent;
    border: 1px solid white;
    border-radius: 12px;
    color: white;
}

textarea {
    height: 6rem;
}

button {
    //padding: 1rem;
    cursor: pointer;
    color: $primary-colour;
    border: none;
    border-radius: 12px;
    &:hover {
        background: $secondary-colour;
        color: white;
    }
    
}

::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */
    color: white;
    opacity: 1; /* Firefox */
  }
  
  :-ms-input-placeholder { /* Internet Explorer 10-11 */
    color: white;
  }
  
  ::-ms-input-placeholder { /* Microsoft Edge */
    color: white;
  }


// Button Styles
.btn {
    display: block;
    padding: 0.5rem 1rem;
    border: 0;
    margin-bottom: 0.3rem;
    &:hover {
        background: $secondary-colour;
        color: set-text-color($secondary-colour);
    }
}

.btn-dark {
    @extend .btn;
    background: darken($primary-colour,50);
    color: #fff;
}
.btn-light {
    @extend .btn;
    background: lighten($primary-colour,50);
    color: #333;
}

#main-footer {
    text-align: center;
    padding: 1rem;
    background: darken($primary-colour, 10);
    color: set-text-color($primary-colour);
    height: 60px;
}

@import 'mobile'; //media queries need to occur at the end